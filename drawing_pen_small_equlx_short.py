import matplotlib.pyplot as plt
import numpy as np

# Data provided by the user
# Note: I've removed some of the non-breaking space characters for cleaner parsing.
data = np.array([
    [ 1.53080850e-13,  2.50000000e+03,  0.00000000e+00],
    [ 1.53080850e-13,  2.50000000e+03,  3.00000000e+03],
    [ 1.53080850e-13,  2.50000000e+03,  6.00000000e+03],
    [ 1.53080850e-13,  2.50000000e+03,  9.00000000e+03],
    [ 1.53080850e-13,  2.50000000e+03,  1.20000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  1.50000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  1.80000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  2.10000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  2.40000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  2.70000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  3.00000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  3.30000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  3.60000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  3.90000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  4.20000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  4.50000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  4.80000000e+04],
    [ 1.53080850e-13,  2.50000000e+03,  5.10000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  1.50000000e+03],
    [-2.02254249e+03,  1.46946313e+03,  4.50000000e+03],
    [-2.02254249e+03,  1.46946313e+03,  7.50000000e+03],
    [-2.02254249e+03,  1.46946313e+03,  1.05000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  1.35000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  1.65000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  1.95000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  2.25000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  2.55000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  2.85000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  3.15000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  3.45000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  3.75000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  4.05000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  4.35000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  4.65000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  4.95000000e+04],
    [-2.02254249e+03,  1.46946313e+03,  5.25000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  0.00000000e+00],
    [-2.02254249e+03, -1.46946313e+03,  3.00000000e+03],
    [-2.02254249e+03, -1.46946313e+03,  6.00000000e+03],
    [-2.02254249e+03, -1.46946313e+03,  9.00000000e+03],
    [-2.02254249e+03, -1.46946313e+03,  1.20000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  1.50000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  1.80000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  2.10000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  2.40000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  2.70000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  3.00000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  3.30000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  3.60000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  3.90000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  4.20000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  4.50000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  4.80000000e+04],
    [-2.02254249e+03, -1.46946313e+03,  5.10000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  1.50000000e+03],
    [ 2.02254249e+03, -1.46946313e+03,  4.50000000e+03],
    [ 2.02254249e+03, -1.46946313e+03,  7.50000000e+03],
    [ 2.02254249e+03, -1.46946313e+03,  1.05000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  1.35000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  1.65000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  1.95000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  2.25000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  2.55000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  2.85000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  3.15000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  3.45000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  3.75000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  4.05000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  4.35000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  4.65000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  4.95000000e+04],
    [ 2.02254249e+03, -1.46946313e+03,  5.25000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  0.00000000e+00],
    [ 2.02254249e+03,  1.46946313e+03,  3.00000000e+03],
    [ 2.02254249e+03,  1.46946313e+03,  6.00000000e+03],
    [ 2.02254249e+03,  1.46946313e+03,  9.00000000e+03],
    [ 2.02254249e+03,  1.46946313e+03,  1.20000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  1.50000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  1.80000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  2.10000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  2.40000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  2.70000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  3.00000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  3.30000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  3.60000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  3.90000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  4.20000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  4.50000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  4.80000000e+04],
    [ 2.02254249e+03,  1.46946313e+03,  5.10000000e+04],
])

# Create a figure for the plots
fig = plt.figure(figsize=(12, 12))
fig.suptitle('3D Scatter Plot and 2D Projections', fontsize=16)

# --- 1. The 3D Scatter Plot (Top-Left) ---
ax1 = fig.add_subplot(2, 2, 1, projection='3d')

# Extract x, y, and z data
# The trailing comma in the original script creates a tuple, which we want to avoid.
x = data[:, 0]
y = data[:, 1]
z = data[:, 2]

# Create the 3D scatter plot
ax1.scatter(x, y, z, c='r', marker='o')

# Set labels and title for the 3D plot
ax1.set_xlabel('X-axis')
ax1.set_ylabel('Y-axis')
ax1.set_zlabel('Z-axis')
ax1.set_title('3D Scatter Plot')
ax1.grid(True)

# --- 2. Y vs X Projection (Top-Right) ---
ax2 = fig.add_subplot(2, 2, 2)
ax2.scatter(x, y, c='b', marker='^')
ax2.set_xlabel('X-axis')
ax2.set_ylabel('Y-axis')
ax2.set_title('Y vs X Projection')
ax2.grid(True)
ax2.axis('equal') # Set equal scaling

# --- 3. Z vs X Projection (Bottom-Left) ---
ax3 = fig.add_subplot(2, 2, 3)
ax3.scatter(x, z, c='g', marker='s')
ax3.set_xlabel('X-axis')
ax3.set_ylabel('Z-axis')
ax3.set_title('Z vs X Projection')
ax3.grid(True)


# --- 4. Z vs Y Projection (Bottom-Right) ---
ax4 = fig.add_subplot(2, 2, 4)
ax4.scatter(y, z, c='purple', marker='D')
ax4.set_xlabel('Y-axis')
ax4.set_ylabel('Z-axis')
ax4.set_title('Z vs Y Projection')
ax4.grid(True)

# Adjust layout to prevent labels from overlapping
plt.tight_layout(rect=[0, 0.03, 1, 0.95]) # Adjust rect to make space for the main title

# Show the plot
plt.show()

